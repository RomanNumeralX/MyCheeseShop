@page "/"
@using MyCheeseShop.Model
@using MyCheeseShop.Components
@using MyCheeseShop.Context
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject CheeseProvider CheeseProvider
@inject NavigationManager NavigationManager
@inject ShoppingCart Shoppingcart
@inject ProtectedSessionStorage ProtectedSessionStore

<PageTitle>Home</PageTitle>



@if (cheeses is null)
{
    <p>Loading...</p>
}

else if (!cheeses.Any())
{
    <p>No cheeses found.</p>
}

<div class="row">
    @foreach (var cheese in cheeses)
    {
        <div class="col-md-3">
            <StoreItem Cheese="cheese" />
        </div>
    }
</div>

@if (!cheeses.Any())
{
    <p>No Cheeses found.</p>
    
}

<input type="text" class="form-control" placeholder="Search for cheese..." @bind="searchTerm" @bind:event="oninput">


@code {
    private string searchTerm = "";
    private IEnumerable<Cheese> cheeses;
    private IEnumerable<Cheese> Cheeses
    {
        get
        {
            return cheeses.Where(GetSearchCriteria);
        }
        set
        {
            Cheeses = value;
        }
    }

    private void GoToCart()
    {
        NavigationManager.NavigateTo("/cart");
    }


    protected override async Task OnInitializedAsync()
    {
        cheeses = await CheeseProvider.GetAllCheesesAsync();
        cheeses = cheeses;
        ShoppingCart.OnCartUpdated += StateHasChanged;

    }

    private bool GetSearchCriteria(Cheese cheese)
    {
        if (string.IsNullOrWhiteSpace(searchTerm)) return true;

        return cheese.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)
            || cheese.Type.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)
            || cheese.Description.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)
            || cheese.Strength.Contains(searchTerm, StringComparison.OrdinalIgnoreCase);
    }

}


