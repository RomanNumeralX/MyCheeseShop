@using MyCheeseShop.Model
@using MyCheeseShop.Components
@using MyCheeseShop.Context
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject CheeseProvider CheeseProvider
@inject ShoppingCart ShoppingCart
@inject ProtectedSessionStorage ProtectedSessionStore
@inject NavigationManager NavigationManager

<div class="card-group">
    <div class="card m-1">
        <img src="imgs/@Cheese.ImageUrl" class="card-img-top p-2" alt="@Cheese.Name" style="border-radius:15px;">
        <div class="card-body">
            <h5>
                <span class="badge text-bg-primary">@Cheese.Type</span>
                <span class="badge text-bg-success">@Cheese.Strength</span>
            </h5>
            <h5 class="card-title d-flex justify-content-between align-items-center">
                @Cheese.Name
                <span class="badge text-bg-danger">@Cheese.Price</span>
            </h5>

            <p class="card-text">@Cheese.Description</p>

            <EditForm Model="quantity" OnSubmit="AddToCart">
                <div class="row">
                    <div class="col-lg-6 col-12">
                        <InputSelect class="form-select w-100" @bind-Value="quantity" required>
                            @for (var i = 1; i <= 5; i++)
                            {
                                <option value="@i">@(i * 100)g</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-lg-6 col-12 mt-lg-0 mt-1">
                        <button class="btn btn-primary position-relative w-100">
                            Add to cart
                            @if (ShoppingCart.GetQuantity(Cheese) > 0)
                            {
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                    @(ShoppingCart.GetQuantity(Cheese) * 100)g
                                    <span class="visually-hidden">@Cheese.Name in shopping cart</span>
                                </span>
                            }
                        </button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</div>


<EditForm Model="quantity" OnSubmit="AddToCart">

</EditForm>

@code {

    [Parameter]
    public Cheese Cheese { get; set; }

    private int quantity = 1;

    public async Task AddToCart()
    {
        ShoppingCart.AddItem(Cheese, quantity);
        await ProtectedSessionStore.SetAsync("cart", ShoppingCart.GetItems());
    }

}



